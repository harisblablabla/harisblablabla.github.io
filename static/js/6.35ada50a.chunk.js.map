{"version":3,"sources":["shared/schema/schema.js","module/data-harga-perikanan/create-data-perikanan.js","shared/baseUrl.js","shared/apiConstant.js"],"names":["InsertPerikanan","useState","alert","setAlert","modelData","setModelData","useEffect","fetchDataArea","submit","params","form","uuid","Math","random","komoditas","Komoditas","area_provinsi","Provinsi","value","area_kota","city","size","Size","price","Price","tgl_parsed","Date","toISOString","timestamp","getTime","fetch","baseUrl","apiConstant","method","body","JSON","stringify","headers","credentials","then","response","json","catch","error","message","data","renameKey","obj","oldKey","newKey","forEach","dataObj","model","arr","x","label","push","options","to","className","md","xs","color","onSubmit","renderJsonForm","LIST","OPTION_AREA","OPTION_SIZE"],"mappings":"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","file":"static/js/6.35ada50a.chunk.js","sourcesContent":["\n\nexport default {\n    \"Komoditas\": {\n      \"type\": \"text\",\n      \"required\": true,\n      \"placeholder\": 'Nama komoditas'\n    },\n    \"Provinsi\": {\n      \"type\": \"select\",\n      \"required\": true,\n      \"placeholder\":\"Choose provinsi\",\n      \"options\": [\n        {\n          \"value\": \"1\",\n          \"label\": \"item 1\"\n        },\n        {\n          \"value\": \"2\",\n          \"label\": \"item 2\"\n        }\n      ],\n    },\n    \"Size\": {\n        \"type\":\"select\",\n        \"required\": true,\n        \"options\": [\n         {\n            \"value\": \"30\",\n            \"label\": \"30\"\n         },\n         {\n            \"value\": \"40\",\n            \"label\": \"40\"\n         },\n         {\n            \"value\": \"50\",\n            \"label\": \"50\"\n         },\n         {\n            \"value\": \"60\",\n            \"label\": \"60\"\n         },\n         {\n            \"value\": \"70\",\n            \"label\": \"70\"\n         },\n         {\n            \"value\": \"80\",\n            \"label\": \"80\"\n         },\n         {\n            \"value\": \"90\",\n            \"label\": \"90\"\n         },\n         {\n            \"value\": \"100\",\n            \"label\": \"100\"\n         },\n         {\n            \"value\": \"110\",\n            \"label\": \"110\"\n         },\n         {\n            \"value\": \"120\",\n            \"label\": \"120\"\n         },\n         {\n            \"value\": \"130\",\n            \"label\": \"130\"\n         },\n         {\n            \"value\": \"140\",\n            \"label\": \"140\"\n         },\n         {\n            \"value\": \"140\",\n            \"label\": \"150\"\n         },\n        ],\n        \"placeholder\": \"choose size\"\n    },\n    \"Price\": {\n        \"type\":\"number\",\n        \"placeholder\":\"Price\"\n    },\n    \"Save\": { \n      \"type\": \"submit\",\n    }\n  }","import React, { useEffect, useState } from 'react'\nimport JsonToForm from 'json-reactform';\nimport { Alert, Card, CardBody, Col, Container, Row } from 'reactstrap'\nimport model from '../../shared/schema/schema'\nimport { baseUrl } from '../../shared/baseUrl';\nimport * as apiConstant from '../../shared/apiConstant'\nimport { Link } from 'react-router-dom';\n\n\nexport default function InsertPerikanan() {\n\n    const [alert, setAlert] = useState(false)\n    const [modelData, setModelData] = useState(null)\n\n    const toogleAlert = () => {\n        setAlert(!alert)\n    }\n\n    useEffect( () => {\n        fetchDataArea()\n        // fetchDataSize()\n    },[])\n\n    const submit = (params) => {\n  \n        const form = [{\n            uuid: Math.random() * 999 + 'hrs',\n            komoditas: params.Komoditas,\n            area_provinsi: params.Provinsi.value,\n            area_kota: params.Provinsi.city,\n            size: params.Size.value,\n            price: params.Price,\n            tgl_parsed: new Date().toISOString(),\n            timestamp: new Date().getTime()\n        }]\n\n        fetch(baseUrl+apiConstant.LIST,{\n            method: 'POST',\n            body: JSON.stringify(form),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            credentials: \"same-origin\"\n        })\n        .then( (response) => {\n            return response.json()\n        })\n        .then( () => {\n            toogleAlert()\n        })\n        .catch( (error) => {\n            alert('Your data could not be posted\\nError: '+error.message)\n        })\n    }\n\n    const fetchDataSize = () => {\n        fetch(baseUrl+apiConstant.OPTION_SIZE)\n        .then( (response) => {\n            return response.json()\n        })\n        .then( (data) => {\n            function renameKey ( obj, oldKey, newKey ) {\n                obj[newKey] = obj[oldKey];\n                delete obj[oldKey];\n            }\n\n            data.forEach( obj => renameKey( obj, `size`, 'label' ) );\n            data.forEach( obj => renameKey( obj, `size`, 'value' ) );\n\n            let dataObj = model;\n            let arr = []\n\n            for(let x in data) {\n                let obj = {\n                    value: data[x].label,\n                    label: data[x].label,\n                }\n                arr.push(obj)\n            }\n\n            dataObj.Size.options = arr \n            console.log(dataObj)\n            setModelData(dataObj)\n        })\n    }\n\n    const fetchDataArea = () => {\n        fetch(baseUrl+apiConstant.OPTION_AREA)\n        .then( (response) => {\n            return response.json()\n        })\n        .then( (data) => {\n\n            function renameKey ( obj, oldKey, newKey ) {\n                obj[newKey] = obj[oldKey];\n                delete obj[oldKey];\n            }\n\n            data.forEach( obj => renameKey( obj, `province`, 'label' ) );\n            data.forEach( obj => renameKey( obj, `city`, 'value' ) );\n\n            let dataObj = model;\n            let arr = []\n\n            for(let x in data) {\n                let obj = {\n                    value: data[x].label,\n                    label: data[x].label,\n                    city: data[x].value\n                }\n                arr.push(obj)\n            }\n\n            dataObj.Provinsi.options = arr            \n            setModelData(dataObj)\n        })\n    }\n\n    const renderJsonForm = () => {\n        if(modelData !== null) {\n            return (\n                <JsonToForm model={modelData} onSubmit={submit}/>\n            )\n        }\n    }\n\n    return (\n        <div>\n            <Container>\n                    <Link to='/perikanan'>\n                        <h3 className='mt-5'><em className=\"fas fa-chevron-left pr-3\"></em>Insert Data Komoditas</h3>\n                    </Link>\n                    <Card className='my-4'>\n                        <CardBody className='p-4'>\n                        <Row>\n                            <Col md='12' xs='12'>\n                                {alert ? <Alert color=\"success\">Your data has been successfully saved!</Alert> : <div></div>}\n                                {renderJsonForm()}\n                            </Col>\n                        </Row>\n                        </CardBody>\n                    </Card>\n            </Container>\n        </div>\n    )\n}","export const baseUrl = 'https://stein.efishery.com/v1/storages/5e1edf521073e315924ceab4'","export const LIST           = '/list'\nexport const OPTION_AREA    = '/option_area'\nexport const OPTION_SIZE    = '/option_size'"],"sourceRoot":""}